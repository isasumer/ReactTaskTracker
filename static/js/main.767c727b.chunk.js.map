{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/TaskItem.jsx","components/TaskList.jsx","components/CreateTask.jsx","store/initialStates.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","toggleShow","className","style","backgroundColor","onClick","Header","title","isTaskBarShowed","TaskItem","task","onDelete","toggleDone","isDone","onDoubleClick","id","cursor","day","TaskList","tasks","map","CreateTask","onCreate","useState","setText","setDay","onSubmit","e","preventDefault","alert","htmlFor","placeholder","name","type","value","onChange","target","initialState","defaultProps","App","setTasks","setIsTaskBarShowed","prevState","Date","now","newTask","length","deletedItemID","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.767c727b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ text, color, toggleShow }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={toggleShow}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, isTaskBarShowed, toggleShow }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={isTaskBarShowed ? \"steelblue\" : \"purple\"}\r\n        text={\r\n          isTaskBarShowed ? \"Hide Create a Task Bar\" : \"Show Create a Task Bar\"\r\n        }\r\n        toggleShow={toggleShow}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst TaskItem = ({ task, onDelete, toggleDone }) => {\r\n \r\n  return (\r\n    <div className={`task ${task.isDone ? \"done\" : \"\"}`} onDoubleClick= { () => toggleDone(task.id)}> \r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import TaskItem from './TaskItem';\r\n\r\nexport default function TaskList ({tasks, onDelete, toggleDone}) {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            tasks.map((task) => (\r\n                <TaskItem key={task.id} task={task} onDelete = {onDelete} toggleDone ={toggleDone}/> \r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nfunction CreateTask({ onCreate }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n\r\n  const handleTextChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const handleDayChange = (e) => {\r\n    setDay(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();   //sayfanın refresh olmasını engeller.\r\n    if (!text || !day) {\r\n      alert(\"Please fill both fields\");\r\n    } else {\r\n      onCreate ({text,day, isDone:false})\r\n      setText(\"\");\r\n      setDay(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"add-form\" onSubmit= {onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"task\">Task</label>\r\n          <input\r\n            placeholder=\"Write a Task\"\r\n            id=\"task\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={handleTextChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"day\">Day & Time</label>\r\n          <input\r\n            placeholder=\"Enter a Date and Time\"\r\n            id=\"day\"\r\n            name=\"day\"\r\n            type=\"text\"\r\n            value={day}\r\n            onChange={handleDayChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","export const initialState = [\r\n    {\r\n      id: 1,\r\n      text: \"Study React Pre-Class Notes\",\r\n      day: \"Feb 5th at 2:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Feed the Dog\",\r\n      day: \"Feb 6th at 1:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Attend in-Class\",\r\n      day: \"Feb 7th at 20:00pm\",\r\n      isDone: false,\r\n    },\r\n  ];","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList.jsx\";\nimport CreateTask from \"./components/CreateTask.jsx\";\nimport { useState } from \"react\";\nimport { initialState } from \"./store/initialStates\";\n\nfunction App() {\n  const [tasks, setTasks] = useState(initialState);\n  const [isTaskBarShowed, setIsTaskBarShowed] = useState(false);\n\n  //  Create Task\n  const onCreate = (task) => {\n    const id = Date.now();\n    const newTask = { id, ...task };\n    setTasks((prevState) => [...prevState, newTask]);\n  };\n\n  //  Delete Task\n  const onDelete = (deletedItemID) =>\n    setTasks(tasks.filter((task) => task.id !== deletedItemID));\n\n  //  Toggle Done\n\n  const toggleDone = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, isDone: !task.isDone } : task\n      )\n    );\n  };\n\n  //  Toggle Show and Hide\n  const toggleShow = () => setIsTaskBarShowed((prevState) => !prevState);\n\n  return (\n    <div className=\"container\">\n      <Header\n        title=\"Task Tracker\"\n        isTaskBarShowed={isTaskBarShowed}\n        toggleShow={toggleShow}\n      />\n      {isTaskBarShowed && <CreateTask onCreate={onCreate} />}\n      {tasks.length > 0 ? (\n        <TaskList tasks={tasks} onDelete={onDelete} toggleDone={toggleDone} />\n      ) : (\n        <p>No Task to show</p>\n      )}\n    </div>\n  );\n}\n\nHeader.defaultProps = {\n  title: \"Task Tracker as default\",\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}